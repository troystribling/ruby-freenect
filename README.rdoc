= ruby-freenect

FFI-based Ruby wrapper for the OpenKinect library. ruby-freenect supports the following,

  * Video, IR and Depth
  * LED
  * Tilt
  * Accelerometer

== Interface

The interface is very simple and easy to use. This section will give a brief description of all supported methods.

=== Video and Depth Modes

Video and depth modes are used to configure the video and depth data streams and provide info about the streams. Both are instances of the FreenectFrameMode. FreenectFrameMode attributes are shown below and may be accessed with <tt>[]<\tt>

* <b>:resolution<\b>             Resolution
* <b>:format<\b>                 Video or depth format accessed using mode[:format][:video_format] or mode[:format][:depth_format]
* <b>:bytes<\b>                  Total buffer size in bytes to hold a single frame of data,
* <b>:width<\b>                  Width of the frame, in pixels
* <b>:height<\b>                 Height of the frame, in pixels
* <b>:data_bits_per_pixel<\b>    Number of bits of information needed for each pixel
* <b>:padding_bits_per_pixel<\b> Number of bits of padding for alignment used for each pixel
* <b>:framerate<\b>              Approximate expected frame rate, in Hz
* <b>:is_valid<\b>               If 0  is invalid and does not describe a supported mode.  Otherwise, the frame_mode is valid.

The supported resolutions are,

* <b>:freenect_resolution_medium<\b> VGA  - 640x480 
  
The supported Depth Formats are.

* <b>:freenect_depth_11bit<\b>        11 bit depth information in one uint16_t/pixel
* <b>:freenect_depth_10bit<\b>        10 bit depth information in one uint16_t/pixel
* <b>:freenect_depth_11bit_packed<\b> 11 bit packed depth information
* <b>:freenect_depth_10bit_packed<\b> 10 bit packed depth information
  
The supported Video Formats are,

* <b>:freenect_video_rgb<\b>              Decompressed RGB mode 
* <b>:freenect_video_bayer<\b>            Bayer compressed mode
* <b>:freenect_video_ir_8bit<\b>          8-bit IR mode
* <b>:freenect_video_ir_10bit<\b>         10-bit IR mode
* <b>:freenect_video_ir_10bit_packed<\b>  10-bit packed IR mode
* <b>:freenect_video_yuv_rgb<\b>          YUV RGB mode
* <b>:freenect_video_yuv_raw<\b>          YUV Raw mode
   
=== Video Stream

The following methods are used to access and configure the video stream,

Return the number of supported video modes.

  Freenect.get_video_mode_count
      
Return the video mode with the specified mode_id.

  Freenect.get_video_mode(mode_id)
      
Return the configured video mode.

  Freenect.get_current_video_mode
      
Return video mode with specified video_format.
      
  Freenect.find_video_mode(video_format)

Return video frame with specified video_mode. This methods blocks until the video frame is available.

  Freenect.get_video(video_mode)

=== Depth Stream

The following methods are used to access and configure the depth stream,

Return the number of supported depth modes.

  Freenect.get_depth_mode_count
      
Return the depth mode with the specified mode_id.

  Freenect.get_depth_mode(mode_id)
      
Return the configured depth mode.

  Freenect.get_current_depth_mode
      
Return depth mode with specified depth_format.
      
  Freenect.find_depth_mode(depth_format)

Return video frame with specified video_mode. This methods blocks until the video frame is available.

  Freenect.get_depth(depth_mode)
   
=== Tilt

The following methods are used to access and change the kinect tilt configuration,

Set the Kinect tilt to the specified angle.

  Freenect.set_tilt(angle)

Return the Kinect tilt state. Use the following methods to read the tilt state.

  Freenect.get_tilt_state

Return the Kinect tilt angle from the tilt state.

  Freenect.get_tilt(tilt_state)
      
Return the Kinect tilt status from the tilt state.

  Freenect.get_tilt_status(tilt_state)
      
Return the acceleration vector components from the tilt state
      
  Freenect.get_acceleration(tilt_state)
   
=== LED

The following methods are used to change the LED status,

  Freenect.set_led(led_option)

The supported values for LED option are,

* <b>:led_off<\b>               Turn LED off
* <b>:led_green<\b>             Turn LED to Green
* <b>:led_red<\b>               Turn LED to Red
* <b>:led_yellow<\b>            Turn LED to Yellow
* <b>:led_blink_green<\b>       Make LED blink Green
* <b>:led_blink_red_yellow<\b>  Make LED blink Red/Yellow

=== Miscellaneous methods

End the connect session. 

  Freenect.stop

Return the number of Kinects.

  Freenect.get_device_count
  
  
== Install libfreenect

If you have problems visit http://openkinect.org/wiki/Getting_Started#Manual_Build_on_Linux

=== Prerequisites

  sudo apt-get install cmake libglut3-dev pkg-config build-essential libxmu-dev libxi-dev libusb-1.0-0-dev

  sudo apt-get install autoconf automake

  sudo apt-get install libltdl3-dev

=== Build and Install libusb

  git clone git://git.libusb.org/libusb.git

  ./autogen.sh
  make
  sudo make install

=== Build and Install libfreenect

  git clone git://github.com/OpenKinect/libfreenect.git

  cd libreenect
  mkdir build
  cd build
  cmake ..

  make
  sudo make install

=== Configure USB Interface

Add the following lines to the file <tt>usr-local-libs.conf</tt>

  /usr/local/lib64
  /usr/local/lib
  
Next enter the following commands

  sudo su root
  mv usr-local-libs.conf /etc/ld.so.conf.d/usr-local-libs.conf
  /sbin/ldconfig -v

== Copyright

Copyright (c) 2012 Troy Stribling. See LICENSE.txt for details.
